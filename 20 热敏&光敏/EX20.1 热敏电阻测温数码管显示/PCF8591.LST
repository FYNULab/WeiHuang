C51 COMPILER V7.06   PCF8591                                                               07/28/2012 09:28:31 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE PCF8591
OBJECT MODULE PLACED IN PCF8591.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE PCF8591.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          
   2          /**************************************************************************************************/    
   3          #include "reg51.h"      //包含头文件
   4          #include"intrins.h"     //_nop_();延时函数用
   5          
   6          sbit sda=P2^7;          //数据线
   7          sbit scl=P2^6;          //时钟线
   8          
   9          #define uchar unsigned char
  10          #define uint  unsigned int
  11          
  12          uchar temp[8]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  13          uchar temp1[8];
  14          
  15          
  16          extern delay(uint time); 
  17          //**************************************************************************************************
  18          //启动(SCL为高，SDA由高变为低是一个开始条件)
  19          //**************************************************************************************************
  20          void start()  
  21          {       
  22   1              sda=1;    //数据线置高,
  23   1              _nop_();  //延时
  24   1              scl=1;    //时钟线置高
  25   1              _nop_();  //延时
  26   1              sda=0;    //数据线置低,由高变低
  27   1              _nop_();  //延时
  28   1              scl=0;    //时钟线置低,准备发送或接收数据,总线进入忙状态(I2C总线在空闲状态时，SDA与SCL均被置高)
  29   1              _nop_();  //延时
  30   1      }
  31          //**************************************************************************************************
  32          //停止（SCL为高，SDA由低变为高是一个结束条件）
  33          //**************************************************************************************************
  34          void stop()   
  35          {
  36   1              sda=0;                   //数据线置低
  37   1              _nop_();                 //延时
  38   1              scl=1;                   //时钟线置高
  39   1              _nop_();                 //延时
  40   1              sda=1;                   //数据线置高，由低变高
  41   1              _nop_();                 //延时
  42   1      }
  43          //**************************************************************************************************
  44          //检测应答(所有的地址和数据字都是以8bit,在第9个时钟周期，从器件发出"0"信号来作为收到一个字的应答信号)
  45          //**************************************************************************************************
  46          void checkACK()                   //主器件检测从器件是否返回应答
  47          {
  48   1              scl=1;                        //时钟线置高
  49   1              _nop_();                      //延时
  50   1              while(sda==1);                //等待第9个时钟周期器件发出的响应信号"0"
  51   1              scl=0;                        //时钟线置低
  52   1              _nop_();                      //延时
  53   1      }
  54          //**************************************************************************************************
  55          //发送应答(发送方为主器件，接收方为从器件，控制器作为从器件接收完1数据时，发送应答信号
C51 COMPILER V7.06   PCF8591                                                               07/28/2012 09:28:31 PAGE 2   

  56          //**************************************************************************************************
  57          void sendACK(bit ACK)                   
  58          {
  59   1          if(ACK)sda=1;            //如果i位为1则发送1,即发送"非应答信号"
  60   1            else sda=0;            //如果i位为0则发送0,即发送"应答信号"       
  61   1          scl=1;                   //时钟线置高,给一个脉冲
  62   1              _nop_();                 //延时
  63   1              scl=0;                   //时钟线置低
  64   1              _nop_();                 //延时
  65   1      }
  66          //**************************************************************************************************
  67          //写一字节
  68          //**************************************************************************************************
  69          void send_byte(uchar date)       //写一个8位字
  70          {
  71   1              uchar i,temp;                //定义局部变量
  72   1              temp=date;                   //待发8位数据赋予temp
  73   1              for(i=0;i<8;i++)             //循环8次，每次写入1位，从最高位开始发送
  74   1              {
  75   2              if(temp&0x80)sda=1;      //如果temp最高位为1则发送1
  76   2                else sda=0;            //如果temp最高位为0则发送0
  77   2                  _nop_();                 //延时
  78   2                      scl=1;                   //给一个脉冲，发送sda当前这位数据
  79   2                      _nop_();                 //延时,需大于4us(参考数据手册时序图) 
  80   2                      _nop_();              
  81   2                      _nop_();                 
  82   2                      _nop_();                 
  83   2                      _nop_();                
  84   2                      scl=0;                   //时钟线置低,准备下一脉冲
  85   2                  _nop_();                 //延时,需大于4.7us(参考数据手册时序图) 
  86   2                      _nop_();              
  87   2                      _nop_();                 
  88   2                      _nop_();                 
  89   2                      _nop_();  
  90   2                      temp=temp<<1;            //左移1位，准备好下1位待发送的数据
  91   2              }
  92   1              checkACK();                  //查询是否返回应答信号
  93   1      }
  94          //**************************************************************************************************
  95          //读一字节
  96          //**************************************************************************************************
  97          uchar receive_byte()         //读一个8位字
  98          {
  99   1              uchar i,temp;            //定义局部变量
 100   1              sda=1;                   //设置数据线为输入
 101   1              _nop_();                 //延时
 102   1              for(i=0;i<8;i++)         //循环8次，每次读取1位，从最高位开始接收
 103   1              {
 104   2                      scl=1;               //给一脉冲，准备发送1位数据            
 105   2                      _nop_();             //延时,需大于4us(参考数据手册时序图) 
 106   2                      _nop_();              
 107   2                      _nop_();                 
 108   2                      _nop_();                 
 109   2                      _nop_();
 110   2                      temp=(temp<<1)|sda;  //读取1位数据,放在temp最低位
 111   2                      scl=0;               //准备给下1个脉冲
 112   2                  _nop_();             //延时,需大于4.7us(参考数据手册时序图) 
 113   2                      _nop_();              
 114   2                      _nop_();                 
 115   2                      _nop_();                 
 116   2                      _nop_();       
 117   2              }
C51 COMPILER V7.06   PCF8591                                                               07/28/2012 09:28:31 PAGE 3   

 118   1          sendACK(0);              //发送应答信号
 119   1              return temp;             //返回读取的8位数据
 120   1      }
 121          //**************************************************************************************************
 122          //读取AD转换结果数据
 123          //**************************************************************************************************
 124          uchar Read_AD(uchar chn)
 125           {
 126   1         uchar  ad_data;          //定义变量，存放转换结果
 127   1         start();                 //启动总线
 128   1         send_byte(0x90);         //选择从器件地址,RW位为0，即选择写命令
 129   1         send_byte(0x40|chn);     //寄存器设置，0通道
 130   1         
 131   1         start();                 //启动I2C总线
 132   1         send_byte(0x91);         //选择从器件地址,RW位为1，即选择读命令
 133   1      
 134   1         ad_data=receive_byte();  //读取转换结果
 135   1         sendACK(1);              //发送非应答信号
 136   1         stop();                  //停止 
 137   1         return(ad_data);
 138   1       }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    163    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
