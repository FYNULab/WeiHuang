C51 COMPILER V7.06   MAIN                                                                  10/11/2014 21:59:25 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          
   2          /***************************************************************************************************    
   3          工程名称：      DA_LED
   4          功能描述：      控制DA输出连续变化电压，使输出电压控制发光二极管D10由亮变暗。
   5          硬件连接：  用2位杜邦线分别将J11_7与J17_SDA、J11_6与J17_SCL连接,用1位跳帽短接J19_LED与J19_AOUT。
   6          维护记录：  2011-8-22
   7          ***************************************************************************************************/
   8          #include "reg51.h"      //包含头文件
   9          #include"intrins.h"     //_nop_();延时函数用
  10          
  11          sbit sda=P2^7;          //数据线
  12          sbit scl=P2^6;          //时钟线
  13          
  14          #define uchar unsigned char
  15          #define uint  unsigned int
  16          
  17          uchar temp[8]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  18          
  19          uchar temp1[8];
  20          
  21          
  22          //**************************************************************************************************
  23          //延时
  24          //**************************************************************************************************
  25          delay(uint time)              //int型数据为16位,所以最大值为65535            
  26           {
  27   1        uint  i,j;                  //定义变量i,j,用于循环语句 
  28   1        for(i=0;i<time;i++)         //for循环,循环50*time次
  29   1           for(j=0;j<50;j++);       //for循环,循环50次
  30   1       }
  31          //**************************************************************************************************
  32          //启动(SCL为高，SDA由高变为低是一个开始条件)
  33          //**************************************************************************************************
  34          void start()  
  35          {       
  36   1              sda=1;    //数据线置高,
  37   1              _nop_();  //延时
  38   1              scl=1;    //时钟线置高
  39   1              _nop_();  //延时
  40   1              sda=0;    //数据线置低,由高变低
  41   1              _nop_();  //延时
  42   1              scl=0;    //时钟线置低,准备发送或接收数据,总线进入忙状态(I2C总线在空闲状态时，SDA与SCL均被置高)
  43   1              _nop_();  //延时
  44   1      }
  45          //**************************************************************************************************
  46          //停止（SCL为高，SDA由低变为高是一个结束条件）
  47          //**************************************************************************************************
  48          void stop()   
  49          {
  50   1              sda=0;                   //数据线置低
  51   1              _nop_();                 //延时
  52   1              scl=1;                   //时钟线置高
  53   1              _nop_();                 //延时
  54   1              sda=1;                   //数据线置高，由低变高
  55   1              _nop_();                 //延时
C51 COMPILER V7.06   MAIN                                                                  10/11/2014 21:59:25 PAGE 2   

  56   1      }
  57          //**************************************************************************************************
  58          //检测应答(所有的地址和数据字都是以8bit,在第9个时钟周期，从器件发出"0"信号来作为收到一个字的应答信号)
  59          //**************************************************************************************************
  60          void checkACK()                   //主器件检测从器件是否返回应答
  61          {
  62   1              scl=1;                        //时钟线置高
  63   1              _nop_();                      //延时
  64   1              while(sda==1);                //等待第9个时钟周期器件发出的响应信号"0"
  65   1              scl=0;                        //时钟线置低
  66   1              _nop_();                      //延时
  67   1      }
  68          //**************************************************************************************************
  69          //写一字节
  70          //**************************************************************************************************
  71          void send_byte(uchar date)       //写一个8位字
  72          {
  73   1              uchar i,temp;                //定义局部变量
  74   1              temp=date;                   //待发8位数据赋予temp
  75   1              for(i=0;i<8;i++)             //循环8次，每次写入1位，从最高位开始发送
  76   1              {
  77   2              if(temp&0x80)sda=1;      //如果temp最高位为1则发送1
  78   2                else sda=0;            //如果temp最高位为0则发送0
  79   2                  _nop_();                 //延时
  80   2                      scl=1;                   //给一个脉冲，发送sda当前这位数据
  81   2                      _nop_();                 //延时,需大于4us(参考数据手册时序图) 
  82   2                      _nop_();              
  83   2                      _nop_();                 
  84   2                      _nop_();                 
  85   2                      _nop_();                
  86   2                      scl=0;                   //时钟线置低,准备下一脉冲
  87   2                  _nop_();                 //延时,需大于4.7us(参考数据手册时序图) 
  88   2                      _nop_();              
  89   2                      _nop_();                 
  90   2                      _nop_();                 
  91   2                      _nop_();  
  92   2                      temp=temp<<1;            //左移1位，准备好下1位待发送的数据
  93   2              }
  94   1              checkACK();                  //查询是否返回应答信号
  95   1      }
  96          //**************************************************************************************************
  97          //DA转化函数
  98          //**************************************************************************************************
  99          DAC(uchar temp)
 100           {
 101   1         start();                 //启动总线
 102   1         send_byte(0x90);         //选择从器件地址,RW位为0，即选择写命令
 103   1         send_byte(0x40);         //寄存器设置
 104   1         send_byte(temp);         //写入数字量
 105   1         stop();                  //停止 
 106   1       }
 107          //**************************************************************************************************
 108          //主函数
 109          //**************************************************************************************************
 110          void main()
 111          {       
 112   1         uchar dat;                    //DA转换的数字量
 113   1         while(1)                      //死循环
 114   1          {
 115   2            for(dat=0;dat<1000;dat++)   //LED由亮变暗
 116   2             {
 117   3              DAC(dat);                //控制DA输出 
C51 COMPILER V7.06   MAIN                                                                  10/11/2014 21:59:25 PAGE 3   

 118   3              delay(1000);              //延时
 119   3             }
 120   2         
 121   2              }
 122   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    153    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
