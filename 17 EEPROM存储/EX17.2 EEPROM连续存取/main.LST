C51 COMPILER V7.06   MAIN                                                                  07/28/2012 09:56:09 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          /***************************************************************************************************    
   2          工程名称：      IIC_SEQ
   3          功能描述：      向EEPROM连续存储多个字节数据，然后读取出来并在发光二极管上显示,实现流水灯功能。
   4          硬件连接：  用8位杜邦线将J8与J12连接，2位杜邦线分别将J11_6与J17_SCL、J11_7与J17_SDA连接
   5          维护记录：  2011-8-22
   6          ***************************************************************************************************/
   7          #include "reg51.h"      //包含头文件
   8          #include"intrins.h"     //_nop_();延时函数用
   9          
  10          sbit sda=P2^7;          //数据线
  11          sbit scl=P2^6;          //时钟线
  12          
  13          #define uchar unsigned char
  14          #define uint  unsigned int
  15          
  16          uchar temp[8]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  17          
  18          uchar temp1[8];
  19          
  20          //**************************************************************************************************
  21          //延时
  22          //**************************************************************************************************
  23          delay(uint time)              //int型数据为16位,所以最大值为65535            
  24           {
  25   1        uint  i,j;                  //定义变量i,j,用于循环语句 
  26   1        for(i=0;i<time;i++)         //for循环,循环50*time次
  27   1           for(j=0;j<50;j++);       //for循环,循环50次
  28   1       }
  29          //**************************************************************************************************
  30          //启动(SCL为高，SDA由高变为低是一个开始条件)
  31          //**************************************************************************************************
  32          void start()  
  33          {       
  34   1              sda=1;    //数据线置高,
  35   1              _nop_();  //延时
  36   1              scl=1;    //时钟线置高
  37   1              _nop_();  //延时
  38   1              sda=0;    //数据线置低,由高变低
  39   1              _nop_();  //延时
  40   1              scl=0;    //时钟线置低,准备发送或接收数据,总线进入忙状态(I2C总线在空闲状态时，SDA与SCL均被置高)
  41   1              _nop_();  //延时
  42   1      }
  43          //**************************************************************************************************
  44          //停止（SCL为高，SDA由低变为高是一个结束条件）
  45          //**************************************************************************************************
  46          void stop()   
  47          {
  48   1              sda=0;                   //数据线置低
  49   1              _nop_();                 //延时
  50   1              scl=1;                   //时钟线置高
  51   1              _nop_();                 //延时
  52   1              sda=1;                   //数据线置高，由低变高
  53   1              _nop_();                 //延时
  54   1      }
  55          //**************************************************************************************************
C51 COMPILER V7.06   MAIN                                                                  07/28/2012 09:56:09 PAGE 2   

  56          //检测应答(所有的地址和数据字都是以8bit,在第9个时钟周期，从器件发出"0"信号来作为收到一个字的应答信号)
  57          //**************************************************************************************************
  58          void checkACK()                   //主器件检测从器件是否返回应答
  59          {
  60   1              scl=1;                        //时钟线置高
  61   1              _nop_();                      //延时
  62   1              while(sda==1);                //等待第9个时钟周期器件发出的响应信号"0"
  63   1              scl=0;                        //时钟线置低
  64   1              _nop_();                      //延时
  65   1      }
  66          //**************************************************************************************************
  67          //发送应答(发送方为主器件，接收方为从器件，控制器作为从器件接收完1数据时，发送应答信号
  68          //**************************************************************************************************
  69          void sendACK(bit ACK)                   
  70          {
  71   1          if(ACK)sda=1;            //如果i位为1则发送1,即发送"非应答信号"
  72   1            else sda=0;            //如果i位为0则发送0,即发送"应答信号"       
  73   1          scl=1;                   //时钟线置高,给一个脉冲
  74   1              _nop_();                 //延时
  75   1              scl=0;                   //时钟线置低
  76   1              _nop_();                 //延时
  77   1      }
  78          //**************************************************************************************************
  79          //写一字节
  80          //**************************************************************************************************
  81          void send_byte(uchar date)       //写一个8位字
  82          {
  83   1              uchar i,temp;                //定义局部变量
  84   1              temp=date;                   //待发8位数据赋予temp
  85   1              for(i=0;i<8;i++)             //循环8次，每次写入1位，从最高位开始发送
  86   1              {
  87   2              if(temp&0x80)sda=1;      //如果temp最高位为1则发送1
  88   2                else sda=0;            //如果temp最高位为0则发送0
  89   2                  _nop_();                 //延时
  90   2                      scl=1;                   //给一个脉冲，发送sda当前这位数据
  91   2                      _nop_();                 //延时,需大于4us(参考数据手册时序图) 
  92   2                      _nop_();              
  93   2                      _nop_();                 
  94   2                      _nop_();                 
  95   2                      _nop_();                
  96   2                      scl=0;                   //时钟线置低,准备下一脉冲
  97   2                  _nop_();                 //延时,需大于4.7us(参考数据手册时序图) 
  98   2                      _nop_();              
  99   2                      _nop_();                 
 100   2                      _nop_();                 
 101   2                      _nop_();  
 102   2                      temp=temp<<1;            //左移1位，准备好下1位待发送的数据
 103   2              }
 104   1              checkACK();                  //查询是否返回应答信号
 105   1      }
 106          //**************************************************************************************************
 107          //读一字节
 108          //**************************************************************************************************
 109          uchar receive_byte()         //读一个8位字
 110          {
 111   1              uchar i,temp;            //定义局部变量
 112   1              sda=1;                   //设置数据线为输入
 113   1              _nop_();                 //延时
 114   1              for(i=0;i<8;i++)         //循环8次，每次读取1位，从最高位开始接收
 115   1              {
 116   2                      scl=1;               //给一脉冲，准备发送1位数据            
 117   2                      _nop_();             //延时,需大于4us(参考数据手册时序图) 
C51 COMPILER V7.06   MAIN                                                                  07/28/2012 09:56:09 PAGE 3   

 118   2                      _nop_();              
 119   2                      _nop_();                 
 120   2                      _nop_();                 
 121   2                      _nop_();
 122   2                      temp=(temp<<1)|sda;  //读取1位数据,放在temp最低位
 123   2                      scl=0;               //准备给下1个脉冲
 124   2                  _nop_();             //延时,需大于4.7us(参考数据手册时序图) 
 125   2                      _nop_();              
 126   2                      _nop_();                 
 127   2                      _nop_();                 
 128   2                      _nop_();       
 129   2              }
 130   1          sendACK(0);              //发送应答信号
 131   1              return temp;             //返回读取的8位数据
 132   1      }
 133          //**************************************************************************************************
 134          //向某I2C器件的某字地址开始连续存储n个数据
 135          //**************************************************************************************************
 136          void write_nword(uchar device_add,uchar word_add,uchar n,uchar *date)  
 137          {
 138   1              uchar i;
 139   1           for(i=0;i<n;i++)
 140   1            {
 141   2             start();                  //启动
 142   2                 send_byte(device_add);    //选择从器件地址,RW位为0，即选择写命令
 143   2                 send_byte(word_add);      //写字地址
 144   2                 send_byte(*date);         //写数据
 145   2                 stop();                   //停止 
 146   2             delay(100);               //延时 
 147   2             word_add++;               //字地址加1
 148   2             date++;                   //数据地址加1
 149   2            }       
 150   1      }
 151          //**************************************************************************************************
 152          //向某I2C器件的某字地址开始连续读取n个数据
 153          //**************************************************************************************************
 154          void read_nword(uchar device_add,uchar word_add,uchar n,uchar *date)   //读出一个存储的数据
 155          {
 156   1                      uchar i;
 157   1                  start();                 //启动
 158   1                      send_byte(device_add);   //选择从器件地址,RW位为0，即选择写命令
 159   1                      send_byte(word_add);     //写字地址
 160   1                      start();                 //启动
 161   1                      send_byte(device_add+1); //选择从器件地址,RW位为1，即选择读命令
 162   1                  for(i=0;i<n;i++)
 163   1                   {
 164   2                    *date=receive_byte();  //读数据
 165   2                    date++;                //数据地址加1
 166   2                   }  
 167   1                  sendACK(1);              //发送非应答信号
 168   1                      stop();                  //停止    
 169   1      }
 170          //**************************************************************************************************
 171          //主函数
 172          //**************************************************************************************************
 173          void main()
 174          {       
 175   1         uchar i;                      //定义变量
 176   1         write_nword(0xa0,0,8,temp);   //向I2C器件a0的第0个地址开始连续写8个字节的数据
 177   1         while(1)                      //死循环
 178   1          {
 179   2         read_nword(0xa0,0,8,temp1);   //向I2C器件a0的第0个地址开始连续读8个字节的数据,存放在temp1数组中
C51 COMPILER V7.06   MAIN                                                                  07/28/2012 09:56:09 PAGE 4   

 180   2               for(i=0;i<8;i++)            //循环显示数据
 181   2            {
 182   3             P1=~temp1[i];             //送数据到P1口显示        
 183   3             delay(2000);              //延时
 184   3             temp1[i]=0;               //temp1[i]清0,8次循环后数组全部为0
 185   3            }
 186   2              }
 187   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    360    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16      13
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
