C51 COMPILER V7.06   PS2                                                                   07/28/2012 09:11:47 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE PS2
OBJECT MODULE PLACED IN PS2.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE PS2.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          //公司：北方蓝芯科技开发有限公司
   2          //网址：www.hrbnbc.com
   3          //更多教程可登陆技术论坛www.hrbnbc.com/bbs对应版块下载，
   4          //所有教程一律免费下载
   5          /***************************************************************************************************    
   6          工程名称：      PS/2
   7          功能描述：  实现键盘上的字母和数字扫描
   8          硬件连接：  用2位杜邦线分别将J9_2与J17_CLK、J9_3与J17_DAT
   9          维护记录：  2011-8-22
  10          ***************************************************************************************************/
  11          #include<reg51.h>        //包含头文件
  12          #define uchar unsigned char
  13          #define uint  unsigned int
  14          
  15          sbit Key_DAT  = P3^3 ;   //定义Keyboard引脚
  16          sbit Key_CLK  = P3^2;    //使用中断
  17          
  18          
  19          bit flag;                //标志位,有按键按下时，置1
  20          bit Shift;               //定义上档键标志
  21          bit Key_UP;              //定义通码断码标志
  22          uchar key_value;         //定义键盘值
  23          uchar n_bit;
  24          uchar LCD_num;
  25          
  26          uchar code key_code[59][2] = {
  27          0x1C, 'a',0x32, 'b',0x21, 'c',0x23, 'd',0x24, 'e',0x2B, 'f',0x34, 'g',0x33, 'h',0x43, 'i',0x3B, 'j',
  28          0x42, 'k',0x4B, 'l',0x3A, 'm',0x31, 'n',0x44, 'o',0x4D, 'p',0x15, 'q',0x2D, 'r',0x1B, 's',0x2C, 't',
  29          0x3C, 'u',0x2A, 'v',0x1D, 'w',0x22, 'x',0x35, 'y',0x1A, 'z',0x45, '0',0x16, '1',0x1E, '2',0x26, '3',
  30          0x25, '4',0x2E, '5',0x36, '6',0x3D, '7',0x3E, '8',0x46, '9',0x0E, '`',0x4E, '-',0x55, '=',0x5D, '\\',
  31          0x29, ' ',0x54, '[',0x5B, ']',0x4C, ';',0x52, '\'',0x41, ',',0x49, '.',0x4A, '/',0x71, '.',0x70, '0',
  32          0x69, '1',0x72, '2',0x7A, '3',0x6B, '4',0x73, '5',0x74, '6',0x6C, '7',0x75, '8',0x7D, '9',};
  33          
  34          extern wcode(uchar);
  35          extern wdata(uchar);
  36          //**************************************************************************************************
  37          //外部中断，读取键值(请阅读指导书中的时序图)
  38          //**************************************************************************************************
  39          void key_in(void) interrupt 0        //CLK为低，进入中断
  40          {
  41   1       if ((n_bit > 0) && (n_bit < 9))     //读取编码，读键盘发来的bit1-bit8，去掉起始位bit0
  42   1         { 
  43   2              key_value = key_value >> 1;      //左移1位，依次从低位到高位
  44   2              if (Key_DAT)                     //如果数据位为1
  45   2              key_value = key_value | 0x80;//将key_value最高位置1
  46   2              }
  47   1              n_bit++;                         //位数加1
  48   1              while (!Key_CLK);                //等待CLK拉高
  49   1      
  50   1              if (n_bit > 10)                  //11位（1起始位+8数据位+1校验位+1停止位）数据读取完毕
  51   1                 { 
  52   2                      n_bit = 0;                   //当中断11次后表示一帧数据收完，清变量准备下一次接收
  53   2                      flag = 1;                    //标志位值1，
  54   2                      EA = 0;                      //关中断等显示完后再开中断 
  55   2                      }
C51 COMPILER V7.06   PS2                                                                   07/28/2012 09:11:47 PAGE 2   

  56   1      
  57   1      }
  58          //**************************************************************************************************
  59          //解码并显示(组合键的扫描码发送按照按键发生的次序,例如按下左SHIFT+A键：1、按下左SHIFT键,2、按下A键,
  60          //           3、释放A键,4、释放左SHIFT键,那么MCU接收到的一串数据为0x12 0x1C 0xF0 0x1C 0xF0 0x12)
  61          //**************************************************************************************************
  62          void Code_show()  
  63          {
  64   1      uchar i,show_data; 
  65   1      if(LCD_num==0)wcode(0x01);              //进入中断，先清除液晶初始化内容
  66   1      if (!Key_UP)                        //当键盘按下时
  67   1              {
  68   2              switch (key_value)
  69   2                              {
  70   3                              case 0xF0 :             // 当收到0xF0，表示按键释放
  71   3                                      Key_UP = 1;         //Key_UP置1表示断码开始
  72   3                                      break;
  73   3      
  74   3                              case 0x12 :             // 左SHIFT按下
  75   3                                      Shift = 1;          //shift标志置1
  76   3                                      break;
  77   3                              case 0x59 :             // 右SHIFT按下
  78   3                                      Shift = 1;          //shift标志置1
  79   3                                      break;
  80   3      
  81   3                              default: 
  82   3      
  83   3                                      for(i=0;(key_code[i][0]!=key_value)&&(i<59);i++);//查表,key_code[i][0]=key_value时,结束for循环
  84   3      
  85   3                                      show_data= key_code[i][1];   //将解码数据赋给show_data,待写入1602显示
  86   3      
  87   3                        if(LCD_num/16==0) wcode(0x80 | LCD_num%16);//写1602地址
  88   3                         else wcode(0xc0 | LCD_num%16);
  89   3      
  90   3                        if(Shift) wdata(show_data-0x20);//1602液晶中，大写字母的地址是小写字母的地址减去0x20
  91   3                         else wdata(show_data);
  92   3      
  93   3                                                      LCD_num++;
  94   3                                                      if(LCD_num==33)
  95   3                                                {
  96   4                                wcode(0x01);    //清屏
  97   4                                                        LCD_num=0;      //重头写数据
  98   4                                                    }
  99   3                                              break;
 100   3                              }
 101   2              }
 102   1      else
 103   1              { 
 104   2              Key_UP = 0;
 105   2              switch (key_value) //当键松开时不处理判码，如G 34H F0H 34H 那么第二个34H不会被处理
 106   2                              {
 107   3                              case 0x12 : // 左 SHIFT
 108   3                                      Shift = 0;
 109   3                                      break;
 110   3      
 111   3                              case 0x59 : // 右 SHIFT
 112   3                                      Shift = 0;
 113   3                                      break;
 114   3                              }
 115   2              }
 116   1      flag = 0; //处理完后，清标志位
 117   1      
C51 COMPILER V7.06   PS2                                                                   07/28/2012 09:11:47 PAGE 3   

 118   1      } 
 119          
 120          //**************************************************************************************************
 121          //按键处理
 122          //**************************************************************************************************
 123          void key_show(void)
 124          {
 125   1      
 126   1       if (flag)
 127   1         Code_show();//解码并显示按键值
 128   1       else
 129   1         EA = 1;     //开中断
 130   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    219    ----
   CONSTANT SIZE    =    118    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
