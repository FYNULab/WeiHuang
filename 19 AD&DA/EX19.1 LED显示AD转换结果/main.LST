C51 COMPILER V7.06   MAIN                                                                  07/28/2012 09:33:24 PAGE 1   


C51 COMPILER V7.06, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

stmt level    source

   1          /***************************************************************************************************    
   2          工程名称：      AD_LED
   3          功能描述：      调节电位器VR3,8位发光二极管显示AD采集结果。
   4          硬件连接：  用8位杜邦线将J8与J12连接，2位杜邦线分别将J11_7与J17_SDA、J11_6与J17_SCL连接。
   5                      用1位跳帽短接J19的AIN0与VIN。
   6          维护记录：  2011-8-22
   7          ***************************************************************************************************/
   8          #include "reg51.h"      //包含头文件
   9          #include"intrins.h"     //_nop_();延时函数用
  10          
  11          sbit sda=P2^7;          //数据线
  12          sbit scl=P2^6;          //时钟线
  13          
  14          #define uchar unsigned char
  15          #define uint  unsigned int
  16          
  17          uchar temp[8]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
  18          
  19          uchar temp1[8];
  20          
  21          //**************************************************************************************************
  22          //延时
  23          //**************************************************************************************************
  24          delay(uint time)              //int型数据为16位,所以最大值为65535            
  25           {
  26   1        uint  i,j;                  //定义变量i,j,用于循环语句 
  27   1        for(i=0;i<time;i++)         //for循环,循环50*time次
  28   1           for(j=0;j<50;j++);       //for循环,循环50次
  29   1       }
  30          //**************************************************************************************************
  31          //启动(SCL为高，SDA由高变为低是一个开始条件)
  32          //**************************************************************************************************
  33          void start()  
  34          {       
  35   1              sda=1;    //数据线置高,
  36   1              _nop_();  //延时
  37   1              scl=1;    //时钟线置高
  38   1              _nop_();  //延时
  39   1              sda=0;    //数据线置低,由高变低
  40   1              _nop_();  //延时
  41   1              scl=0;    //时钟线置低,准备发送或接收数据,总线进入忙状态(I2C总线在空闲状态时，SDA与SCL均被置高)
  42   1              _nop_();  //延时
  43   1      }
  44          //**************************************************************************************************
  45          //停止（SCL为高，SDA由低变为高是一个结束条件）
  46          //**************************************************************************************************
  47          void stop()   
  48          {
  49   1              sda=0;                   //数据线置低
  50   1              _nop_();                 //延时
  51   1              scl=1;                   //时钟线置高
  52   1              _nop_();                 //延时
  53   1              sda=1;                   //数据线置高，由低变高
  54   1              _nop_();                 //延时
  55   1      }
C51 COMPILER V7.06   MAIN                                                                  07/28/2012 09:33:24 PAGE 2   

  56          //**************************************************************************************************
  57          //检测应答(所有的地址和数据字都是以8bit,在第9个时钟周期，从器件发出"0"信号来作为收到一个字的应答信号)
  58          //**************************************************************************************************
  59          void checkACK()                   //主器件检测从器件是否返回应答
  60          {
  61   1              scl=1;                        //时钟线置高
  62   1              _nop_();                      //延时
  63   1              while(sda==1);                //等待第9个时钟周期器件发出的响应信号"0"
  64   1              scl=0;                        //时钟线置低
  65   1              _nop_();                      //延时
  66   1      }
  67          //**************************************************************************************************
  68          //发送应答(发送方为主器件，接收方为从器件，控制器作为从器件接收完1数据时，发送应答信号
  69          //**************************************************************************************************
  70          void sendACK(bit ACK)                   
  71          {
  72   1          if(ACK)sda=1;            //如果i位为1则发送1,即发送"非应答信号"
  73   1            else sda=0;            //如果i位为0则发送0,即发送"应答信号"       
  74   1          scl=1;                   //时钟线置高,给一个脉冲
  75   1              _nop_();                 //延时
  76   1              scl=0;                   //时钟线置低
  77   1              _nop_();                 //延时
  78   1      }
  79          //**************************************************************************************************
  80          //写一字节
  81          //**************************************************************************************************
  82          void send_byte(uchar date)       //写一个8位字
  83          {
  84   1              uchar i,temp;                //定义局部变量
  85   1              temp=date;                   //待发8位数据赋予temp
  86   1              for(i=0;i<8;i++)             //循环8次，每次写入1位，从最高位开始发送
  87   1              {
  88   2              if(temp&0x80)sda=1;      //如果temp最高位为1则发送1
  89   2                else sda=0;            //如果temp最高位为0则发送0
  90   2                  _nop_();                 //延时
  91   2                      scl=1;                   //给一个脉冲，发送sda当前这位数据
  92   2                      _nop_();                 //延时,需大于4us(参考数据手册时序图) 
  93   2                      _nop_();              
  94   2                      _nop_();                 
  95   2                      _nop_();                 
  96   2                      _nop_();                
  97   2                      scl=0;                   //时钟线置低,准备下一脉冲
  98   2                  _nop_();                 //延时,需大于4.7us(参考数据手册时序图) 
  99   2                      _nop_();              
 100   2                      _nop_();                 
 101   2                      _nop_();                 
 102   2                      _nop_();  
 103   2                      temp=temp<<1;            //左移1位，准备好下1位待发送的数据
 104   2              }
 105   1              checkACK();                  //查询是否返回应答信号
 106   1      }
 107          //**************************************************************************************************
 108          //读一字节
 109          //**************************************************************************************************
 110          uchar receive_byte()         //读一个8位字
 111          {
 112   1              uchar i,temp;            //定义局部变量
 113   1              sda=1;                   //设置数据线为输入
 114   1              _nop_();                 //延时
 115   1              for(i=0;i<8;i++)         //循环8次，每次读取1位，从最高位开始接收
 116   1              {
 117   2                      scl=1;               //给一脉冲，准备发送1位数据            
C51 COMPILER V7.06   MAIN                                                                  07/28/2012 09:33:24 PAGE 3   

 118   2                      _nop_();             //延时,需大于4us(参考数据手册时序图) 
 119   2                      _nop_();              
 120   2                      _nop_();                 
 121   2                      _nop_();                 
 122   2                      _nop_();
 123   2                      temp=(temp<<1)|sda;  //读取1位数据,放在temp最低位
 124   2                      scl=0;               //准备给下1个脉冲
 125   2                  _nop_();             //延时,需大于4.7us(参考数据手册时序图) 
 126   2                      _nop_();              
 127   2                      _nop_();                 
 128   2                      _nop_();                 
 129   2                      _nop_();       
 130   2              }
 131   1          sendACK(0);              //发送应答信号
 132   1              return temp;             //返回读取的8位数据
 133   1      }
 134          //**************************************************************************************************
 135          //读取AD转换结果数据
 136          //**************************************************************************************************
 137          uchar Read_AD(uchar chn)
 138           {
 139   1         uchar  ad_data;          //定义变量，存放转换结果
 140   1         start();                 //启动总线
 141   1         send_byte(0x90);         //选择从器件地址,RW位为0，即选择写命令
 142   1         send_byte(0x40|chn);     //寄存器设置，0通道
 143   1         
 144   1         start();                 //启动I2C总线
 145   1         send_byte(0x91);         //选择从器件地址,RW位为1，即选择读命令
 146   1      
 147   1         ad_data=receive_byte();  //读取转换结果
 148   1         sendACK(1);              //发送非应答信号
 149   1         stop();                  //停止 
 150   1         return(ad_data);
 151   1       }
 152          //**************************************************************************************************
 153          //主函数
 154          //**************************************************************************************************
 155          void main()
 156          {       
 157   1         uchar num;                //定义变量 
 158   1         while(1)                  //死循环
 159   1          {
 160   2             num=Read_AD(0);      //采集0通道模拟电压值   
 161   2             P1=~num;              //8位采集结果送8位LED显示     
 162   2             delay(2000);          //延时
 163   2              }
 164   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    215    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
